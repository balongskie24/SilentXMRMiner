# This workflow builds the SilentXMRMiner project using .NET on Windows.
# It will run automatically when changes are pushed to the 'main' branch
# or when a pull request is opened against the 'main' branch.

name: Build SilentXMRMiner

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    # Use a Windows environment, as .NET projects are typically built on Windows.
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      # Clones the repository to the runner.
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      # Installs the .NET SDK. Adjust the version if your project targets a specific .NET version (e.g., '6.0.x', '7.0.x', '8.0.x').
      # The 'windows-latest' runner usually has several .NET versions pre-installed, but specifying ensures consistency.
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x' # Or the specific .NET version your project targets

    - name: Restore NuGet Packages
      # Restores all NuGet packages required by the solution.
      # This is equivalent to 'dotnet restore' command.
      run: dotnet restore SilentXMRMiner.sln # Assuming SilentXMRMiner.sln is the solution file name

    - name: Build Project
      # Builds the project in Release configuration.
      # The '--no-restore' flag prevents re-restoring packages, as they are already restored in the previous step.
      # The output will be in the 'bin/Release' directory within the project folder.
      run: dotnet build SilentXMRMiner.sln --configuration Release --no-restore

    - name: Publish Build Artifacts
      # Optional: Uploads the compiled executable as a workflow artifact.
      # This makes the build output easily downloadable from the GitHub Actions run summary.
      # Adjust the 'path' to match where your compiled .exe is located after building.
      # Common paths are 'SilentXMRMiner/bin/Release/net8.0/' or similar, depending on your project structure and target framework.
      uses: actions/upload-artifact@v4
      with:
        name: SilentXMRMiner-Executable
        path: SilentXMRMiner/bin/Release/net8.0/ # Adjust this path to your actual build output directory
        # If your project is a single .exe, you might specify: path: SilentXMRMiner/bin/Release/net8.0/SilentXMRMiner.exe
        # Or if it's a self-contained deployment: path: SilentXMRMiner/bin/Release/net8.0/publish/
